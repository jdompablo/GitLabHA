---
- name: Checking if cluster is already initialized
  stat:
    path: "{{ kubernetes_admin_config }}"
  register: kubernetes_cluster_info

- name: init_cluster | Setting State Of Cluster On Master
  set_fact: kubernetes_cluster_init=false
  when: kubernetes_cluster_info.stat.exists

- name: init_cluster | Setting State Of Cluster On Master
  set_fact:
    k8s_cluster_init: true
  tags:
    - k8s_get_dashboard
  when: >
        (inventory_hostname == k8s_master) and
        _k8s_kubectl_cluster_info['stat']['exists']
- name: init_cluster | Setting State Of Cluster On Non-Master(s)
  set_fact:
    k8s_cluster_init: "{{ hostvars[k8s_master]['k8s_cluster_init'] }}"
  when: inventory_hostname != k8s_master

- name: init_cluster | Showing Status Of Cluster Fact
  debug: msg="Cluster already initialized == {{ k8s_cluster_init }}"

- name: init_cluster | Generating Token
  command: kubeadm token generate
  register: _k8s_token
  changed_when: false
  no_log: true
  when: >
        (inventory_hostname == k8s_master) and
        not k8s_cluster_init
- name: init_cluster | Setting Token On Master
  set_fact:
    k8s_token: "{{ _k8s_token['stdout_lines'][0] }}"
  no_log: true
  when: >
        (inventory_hostname == k8s_master) and
        not k8s_cluster_init
- name: init_cluster | Setting Token On Non-Master(s)
  set_fact:
    k8s_token: "{{ hostvars[k8s_master]['k8s_token'] }}"
  no_log: true
  when: >
        (inventory_hostname != k8s_master) and
        not k8s_cluster_init

- name: init_cluster | Initializing Cluster Master
  command: >
           kubeadm init \
           --apiserver-advertise-address \
           {{ hostvars[inventory_hostname]['k8s_advertise_address'] }} \
           --apiserver-bind-port \
           {{ k8s_advertise_bind_port }} \
           --token {{ k8s_token }}
  register: _k8s_cluster_master_init
  become: true
  no_log: true
  when: >
        (inventory_hostname == k8s_master) and
        not k8s_cluster_init
